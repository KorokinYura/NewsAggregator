@model Tuple<News, IEnumerable<Comment>, IEnumerable<AppUser>>


@{
    ViewData["Title"] = "News";
}

<br><br><div class="newsFullHead">
    @Model.Item1.Name
</div>

<div>
    <hr />
    <div>
        <div>
            <img class="newsFullImage" src="@Url.Content(Model.Item1.ImageHref)">
        </div><br /><hr />
        <div class="newsFullText">
            <span style="white-space: pre-line">@Model.Item1.Text</span>
        </div>
    </div>
</div>
<div>
    <br />
    <a asp-action="Index">Back to List</a>
</div>
<hr />


<div style="font-size: 150%">Комментарии:</div>
<hr />
<div class="table" id="table">
</div>

@if (User.Identity.Name != null)
{
    <div>
        <div class="form-group">
            <textarea class="form-control" name="text" id="text"></textarea>
        </div>
        <div class="form-group">
            <input type="button" onclick="addCommentAJAX()" value="Create" id="submitButton" class="btn btn-default" />
        </div>
    </div>
}
else
{
    <div>
        You must be logged in to write comments.
    </div>
}

@section Scripts {
    <script>
        $(function () { addComments(); });

        function addCommentAJAX() {
            var text = $("#text").val();
            $('#text').val = '';

            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateCommentAsync", "Home")',
                data: { newsId: @Model.Item1.Id, text: text },

                success: addComment
            });
        }

        function addComments() {
            @foreach (var comment in Model.Item2)
            {
                if (comment.NewsId == Model.Item1.Id)
                {
                    string path;
                    try
                    {
                        path = Model.Item3.First(u => u.UserName == comment.UserName).ImageHref;
                    }
                    catch
                    {
                        path = "/images/UsersImages/DefaultUser.png";
                    }

                    <text>
                        addComment({ id: "@comment.Id", userName: "@comment.UserName", text: "@comment.Text", date: "@comment.Date", imagePath: "@Url.Content(path)" });
                    </text>
                }
            }
        }



        function addComment(comment) {
            $("#table").append(
                checkForAdmin(comment.id) +
                '<br><br><div style="clear:both">' +
                '<div class="commentImageDiv">' +
                '<img class="commentImage" src="'
                + comment.imagePath +
                '"></div><div class="commentHead">'
                + comment.userName +
                '</div><div class="commentFooter">'
                + comment.date +
                '</div></div><div class="commentBody">'
                + comment.text +
                '</div><hr />');
            $("#text").val("");
        }


        function checkForAdmin(id) {
            @if (User.Identity.IsAuthenticated)
            {
                var isAdmin = User.IsInRole("Admin");
                if (isAdmin)
                {
                <text>
                    var button = '<input type="button" onclick="removeCommentAJAX(' + id + ')" value="Delete" id="RemButton" class="btn btn-default" />';
                    return button;
                </text>
                }
            }
            return "";
        }

        function removeCommentAJAX(id) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("RemoveComment", "Home")',
                data: { commentId: id, newsId: @Model.Item1.Id },

                success: function () {
                    location.reload();
                }
            });
        }
    </script>
}